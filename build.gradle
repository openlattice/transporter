/*
 * Copyright (C) 2018. OpenLattice, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * You can contact the owner of the copyright at support@openlattice.com
 *
 *
 */

plugins {
    id "application"
    id 'eclipse'
    id 'idea'
    id 'jacoco'
    id 'checkstyle'
    id "maven-publish"
    id "signing"
    id 'com.github.spotbugs' version '3.0.0'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
id 'org.jetbrains.kotlin.plugin.spring' version '1.3.61'
    id 'org.jetbrains.dokka' version '0.9.17'
    id 'java'
}

description = "transporter"
group = "com.openlattice"

distTar {
    archiveName "transporter.tgz"
}

ext.projectName = "transporter"
ext.scmUrl = 'scm:git:https://github.com/openlattice/transporter.git'
ext.connectionUrl = 'scm:git:https://github.com/openlattice/transporter.git'
ext.developerConnectionUrl = 'scm:git:https://github.com/openlattice/transporter.git'

apply from: "https://raw.githubusercontent.com/openlattice/gradles/master/openlattice.gradle"

mainClassName = "com.openlattice.transporter.TransporterKt"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}


jar {
    doFirst {
        manifest {
            attributes "Class-Path": configurations.runtime.files.collect { it.getName() }.join(" ")
        }
    }
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'commons-cli:commons-cli:1.4'

    if (project.hasProperty('developmentMode') && project.developmentMode) {
        logger.quiet(project.name + " using project dependencies.")
        compile project(":rhizome")
        compile project(":api")

        testCompile(project(path: ":api", configuration: "tests"))
        testCompile(project(path: ":rhizome", configuration: "tests"))
        testCompile(project(path: ":rhizome-client", configuration: "tests"))
        testCompile project(path: ":api")

    } else {
        logger.quiet(project.name + " using jar dependencies.")
        compile "com.openlattice:rhizome:${rhizome_version}"
        compile "com.openlattice:api:${api_version}"

        testCompile "com.openlattice:api:${api_version}:tests"
        testCompile "com.openlattice:rhizome:${rhizome_version}:tests"
        testCompile "com.openlattice:rhizome-client:${rhizome_client_version}:tests"
        testCompile "com.openlattice:api:${api_version}"

    }

    compile fileTree(dir: "lib/", include: "*.jar")

    testCompile "junit:junit:${junit_version}"
    testCompile "org.mockito:mockito-core:2.2.7"

}

startScripts {
    classpath = files(jar.archivePath)
}

eclipse {
    ext.downloadSources = true
    ext.downloadJavadoc = true

    ext.sourceCompatibility = JavaVersion.VERSION_11
    ext.targetCompatibility = JavaVersion.VERSION_11
}

eclipse.classpath.plusConfigurations += [configurations.provided]


compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
